<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="com.jiuy.user.mapper.RoleUrlMappingMapper"> 
 
 	<!-- 主要的返回映射-->
	<resultMap id="BaseResultMap" type="com.jiuy.user.model.RoleUrlMapping"	>
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="role_id"  property="roleId"  jdbcType="BIGINT" />
		<result column="uri_id"  property="uriId"  jdbcType="BIGINT" />
	</resultMap>

	<!-- 所有的列名-->
	<sql id="Base_Column_List" >
		id,role_id,uri_id
	</sql>

	<!-- 精确更新的字段-->
	<sql id="updateBase">
		<if test="id  !=null">
			id = #{id,jdbcType=BIGINT}, 
		</if>
		<if test="roleId  !=null">
			role_id = #{roleId,jdbcType=BIGINT}, 
		</if>
		<if test="uriId  !=null">
			uri_id = #{uriId,jdbcType=BIGINT} 
		</if>
	</sql>

	<!-- 通过主键查找-->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Long" >
		select 
		<include refid="Base_Column_List" />
		from yjj_rb_role_url_mapping
		where  id = #{id,jdbcType=BIGINT} 
	</select>

	<!-- 通过主键删除-->
	<delete id="deleteByPrimaryKey" parameterType="Long" >
		delete from yjj_rb_role_url_mapping
		where id = #{id,jdbcType=BIGINT} 
	</delete>

	<!-- 普通插入全字段插入-->
	<insert id="insert" parameterType="com.jiuy.user.model.RoleUrlMapping" >
		insert into yjj_rb_role_url_mapping
		(
			id,
			role_id,
			uri_id,
		)
		values
		(
			#{id ,jdbcType=BIGINT},
			#{roleId ,jdbcType=BIGINT},
			#{uriId ,jdbcType=BIGINT}
		)
	</insert>

	<!-- 批量插入，全部字段插入-->
	<insert id="insertBach"   parameterType="List" >
		insert into yjj_rb_role_url_mapping
		(
			id,
			role_id,
			uri_id,
		)
		values 
		<foreach collection="list" item="item" separator=",">
		(
			#{item.id ,jdbcType=BIGINT},
			#{item.roleId ,jdbcType=BIGINT},
			#{item.uriId ,jdbcType=BIGINT}
		)
		</foreach>
	</insert>

	<!-- 精确插入，非null得字段才会插入-->
	<insert id="insertSelective" parameterType="com.jiuy.user.model.RoleUrlMapping" useGeneratedKeys="true" keyProperty="id" >
		insert into yjj_rb_role_url_mapping
		<trim prefix="(" suffix=")" suffixOverrides="," > 
			<if test="id !=null">  
				id,
			</if>
			<if test="roleId !=null">  
				role_id,
			</if>
			<if test="uriId !=null">  
				uri_id,
			</if>
		</trim>

		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="id  !=null">
				#{id,jdbcType=BIGINT}, 
			</if>
			<if test="roleId  !=null">
				#{roleId,jdbcType=BIGINT}, 
			</if>
			<if test="uriId  !=null">
				#{uriId,jdbcType=BIGINT} 
			</if>
		</trim>
	</insert> 

	<!-- 精确更新-->
	<update id="updateByPrimaryKeySelective" parameterType="com.jiuy.user.model.RoleUrlMapping" >
		update yjj_rb_role_url_mapping
		<set>
			<include refid="updateBase"/>
		</set>
		where id = #{id,jdbcType=BIGINT} 
	</update> 

	<!-- 全字段更新 需要注意-->
	<update id="updateByPrimaryKey" parameterType="com.jiuy.user.model.RoleUrlMapping" >
		update yjj_rb_role_url_mapping
		set 
			id = #{id ,jdbcType=BIGINT},
			role_id = #{roleId ,jdbcType=BIGINT},
			uri_id = #{uriId ,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT} 
	</update> 

	<!-- 所有的条件集合-->
	<sql id="whereCase"  >
		where  1=1 
		<if test="id  !=null">
			AND id = #{id,jdbcType=BIGINT} 
		</if>
		<if test="roleId  !=null">
			AND role_id = #{roleId,jdbcType=BIGINT} 
		</if>
		<if test="uriId  !=null">
			AND uri_id = #{uriId,jdbcType=BIGINT} 
		</if>
		<include refid="costomWhereCase"/>
	</sql>

	<!-- 查询一条，如果返回多条会报错-->
	<select id="selectOne" parameterType="java.util.Map" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" /> 
		FROM yjj_rb_role_url_mapping 
		<include refid="whereCase" /> 
	</select>

	<!-- 查询一个list-->
	<select id="selectList" parameterType="java.util.Map" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" /> 
		FROM yjj_rb_role_url_mapping 
		<include refid="whereCase" /> 
	</select>

	<!--  @Costom -->
	<!-- 从上一行注释以上为系统生成 从这一行往下为用户自定义 请将自定义的sql放在此行下面 -->
	<sql id="costomWhereCase">
	</sql>

</mapper>