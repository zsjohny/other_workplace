<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="com.jiuy.pcweb.mapper.job.MyJobDetailMapper"> 
 
 	<!-- 主要的返回映射-->
	<resultMap id="BaseResultMap" type="com.jiuy.pcweb.model.job.MyJobDetail"	>
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="job_id"  property="jobId"  jdbcType="BIGINT" />
		<result column="comment"  property="comment"  jdbcType="VARCHAR" />
		<result column="url"  property="url"  jdbcType="VARCHAR" />
		<result column="operator_user_id"  property="operatorUserId"  jdbcType="BIGINT" />
		<result column="create_time"  property="createTime"  jdbcType="TIMESTAMP" />
	</resultMap>

	<!-- 所有的列名-->
	<sql id="Base_Column_List" >
		id,job_id,comment,url,operator_user_id,create_time
	</sql>

	<!-- 精确更新的字段-->
	<sql id="updateBase">
		<if test="id  !=null">
			id = #{id,jdbcType=BIGINT}, 
		</if>
		<if test="jobId  !=null">
			job_id = #{jobId,jdbcType=BIGINT}, 
		</if>
		<if test="comment  !=null">
			comment = #{comment,jdbcType=VARCHAR}, 
		</if>
		<if test="url  !=null">
			url = #{url,jdbcType=VARCHAR}, 
		</if>
		<if test="operatorUserId  !=null">
			operator_user_id = #{operatorUserId,jdbcType=BIGINT}, 
		</if>
		<if test="createTime  !=null">
			create_time = #{createTime,jdbcType=TIMESTAMP} 
		</if>
	</sql>

	<!-- 通过主键查找-->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Long" >
		select 
		<include refid="Base_Column_List" />
		from t_job_detail
		where  id = #{id,jdbcType=BIGINT} 
	</select>

	<!-- 通过主键删除-->
	<delete id="deleteByPrimaryKey" parameterType="Long" >
		delete from t_job_detail
		where id = #{id,jdbcType=BIGINT} 
	</delete>

	<!-- 普通插入全字段插t入-->
	<insert id="insert" parameterType="com.jiuy.pcweb.model.job.MyJobDetail" >
		insert into t_job_detail
		(
			id,
			job_id,
			comment,
			url,
			operator_user_id,
			create_time
		)
		values
		(
			#{id ,jdbcType=BIGINT},
			#{jobId ,jdbcType=BIGINT},
			#{comment ,jdbcType=VARCHAR},
			#{url ,jdbcType=VARCHAR},
			#{operatorUserId ,jdbcType=BIGINT},
			#{createTime ,jdbcType=TIMESTAMP}
		)
	</insert>

	<!-- 批量插入，全部字段插入-->
	<insert id="insertBach"   parameterType="List" >
		insert into t_job_detail
		(
			id,
			job_id,
			comment,
			url,
			operator_user_id,
			create_time
		)
		values 
		<foreach collection="list" item="item" separator=",">
		(
			#{item.id ,jdbcType=BIGINT},
			#{item.jobId ,jdbcType=BIGINT},
			#{item.comment ,jdbcType=VARCHAR},
			#{item.url ,jdbcType=VARCHAR},
			#{item.operatorUserId ,jdbcType=BIGINT},
			#{item.createTime ,jdbcType=TIMESTAMP}
		)
		</foreach>
	</insert>

	<!-- 精确插入，非null得字段才会插入-->
	<insert id="insertSelective" parameterType="com.jiuy.pcweb.model.job.MyJobDetail" useGeneratedKeys="true" keyProperty="id" >
		insert into t_job_detail
		<trim prefix="(" suffix=")" suffixOverrides="," > 
			<if test="id !=null">  
				id,
			</if>
			<if test="jobId !=null">  
				job_id,
			</if>
			<if test="comment !=null">  
				comment,
			</if>
			<if test="url !=null">  
				url,
			</if>
			<if test="operatorUserId !=null">  
				operator_user_id,
			</if>
			<if test="createTime !=null">  
				create_time,
			</if>
		</trim>

		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="id  !=null">
				#{id,jdbcType=BIGINT}, 
			</if>
			<if test="jobId  !=null">
				#{jobId,jdbcType=BIGINT}, 
			</if>
			<if test="comment  !=null">
				#{comment,jdbcType=VARCHAR}, 
			</if>
			<if test="url  !=null">
				#{url,jdbcType=VARCHAR}, 
			</if>
			<if test="operatorUserId  !=null">
				#{operatorUserId,jdbcType=BIGINT}, 
			</if>
			<if test="createTime  !=null">
				#{createTime,jdbcType=TIMESTAMP} 
			</if>
		</trim>
	</insert> 

	<!-- 精确更新-->
	<update id="updateByPrimaryKeySelective" parameterType="com.jiuy.pcweb.model.job.MyJobDetail" >
		update t_job_detail
		<set>
			<include refid="updateBase"/>
		</set>
		where id = #{id,jdbcType=BIGINT} 
	</update> 

	<!-- 全字段更新 需要注意-->
	<update id="updateByPrimaryKey" parameterType="com.jiuy.pcweb.model.job.MyJobDetail" >
		update t_job_detail
		set 
			id = #{id ,jdbcType=BIGINT},
			job_id = #{jobId ,jdbcType=BIGINT},
			comment = #{comment ,jdbcType=VARCHAR},
			url = #{url ,jdbcType=VARCHAR},
			operator_user_id = #{operatorUserId ,jdbcType=BIGINT},
			create_time = #{createTime ,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT} 
	</update> 

	<!-- 所有的条件集合-->
	<sql id="whereCase"  >
		where  1=1 
		<if test="id  !=null">
			AND id = #{id,jdbcType=BIGINT} 
		</if>
		<if test="jobId  !=null">
			AND job_id = #{jobId,jdbcType=BIGINT} 
		</if>
		<if test="comment  !=null">
			AND comment = #{comment,jdbcType=VARCHAR} 
		</if>
		<if test="url  !=null">
			AND url = #{url,jdbcType=VARCHAR} 
		</if>
		<if test="operatorUserId  !=null">
			AND operator_user_id = #{operatorUserId,jdbcType=BIGINT} 
		</if>
		<if test="createTime  !=null">
			AND create_time = #{createTime,jdbcType=TIMESTAMP} 
		</if>
		<include refid="costomWhereCase"/>
	</sql>

	<!-- 查询一条，如果返回多条会报错-->
	<select id="selectOne" parameterType="java.util.Map" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" /> 
		FROM t_job_detail 
		<include refid="whereCase" /> 
	</select>

	<!-- 查询一个list-->
	<select id="selectList" parameterType="java.util.Map" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" /> 
		FROM t_job_detail 
		<include refid="whereCase" /> 
	</select>

	<!-- 查询一个list-->
	<select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT
		count(1) 
		FROM t_job_detail
		<include refid="whereCase" /> 
	</select>

	<!--  @Costom -->
	<!-- 从上一行注释以上为系统生成 从这一行往下为用户自定义 请将自定义的sql放在此行下面 -->
	<sql id="costomWhereCase">
	</sql>

</mapper>